
package com.denovo.p8583server.memweb;

import com.denovo.p8583server.handlers.handlercommon.Globals;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import static com.denovo.p8583server.handlers.handlercommon.Globals.GetPortOrIp;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */

@WebServiceClient(name = "IMemberWebServiceService", targetNamespace = "http://service.ws.crm.ce.com/",wsdlLocation="")
public class IMemberWebServiceService
    extends Service
{

    private final static URL IMEMBERWEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException IMEMBERWEBSERVICESERVICE_EXCEPTION;
    private final static QName IMEMBERWEBSERVICESERVICE_QNAME = new QName("http://service.ws.crm.ce.com/", "IMemberWebServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(GetPortOrIp("webServiceIp"));
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        IMEMBERWEBSERVICESERVICE_WSDL_LOCATION = url;
        IMEMBERWEBSERVICESERVICE_EXCEPTION = e;
    }

    public IMemberWebServiceService() {
        super(__getWsdlLocation(), IMEMBERWEBSERVICESERVICE_QNAME);
    }

    public IMemberWebServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), IMEMBERWEBSERVICESERVICE_QNAME, features);
    }

    public IMemberWebServiceService(URL wsdlLocation) {
        super(wsdlLocation, IMEMBERWEBSERVICESERVICE_QNAME);
    }

    public IMemberWebServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IMEMBERWEBSERVICESERVICE_QNAME, features);
    }

    public IMemberWebServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IMemberWebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IMemberWebService
     */
    @WebEndpoint(name = "IMemberWebServicePort")
    public IMemberWebService getIMemberWebServicePort() {
        return super.getPort(new QName("http://service.ws.crm.ce.com/", "IMemberWebServicePort"), IMemberWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMemberWebService
     */
    @WebEndpoint(name = "IMemberWebServicePort")
    public IMemberWebService getIMemberWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.ws.crm.ce.com/", "IMemberWebServicePort"), IMemberWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (IMEMBERWEBSERVICESERVICE_EXCEPTION!= null) {
            throw IMEMBERWEBSERVICESERVICE_EXCEPTION;
        }
        return IMEMBERWEBSERVICESERVICE_WSDL_LOCATION;
    }

}
